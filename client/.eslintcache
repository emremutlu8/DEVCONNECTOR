[{"D:\\htdocs\\DEVCONNECTOR\\client\\src\\index.js":"1","D:\\htdocs\\DEVCONNECTOR\\client\\src\\App.js":"2","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\layout\\Navbar.js":"3","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\layout\\Landing.js":"4","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\auth\\Register.js":"5","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\auth\\Login.js":"6","D:\\htdocs\\DEVCONNECTOR\\client\\src\\store.js":"7","D:\\htdocs\\DEVCONNECTOR\\client\\src\\reducers\\index.js":"8","D:\\htdocs\\DEVCONNECTOR\\client\\src\\reducers\\alert.js":"9","D:\\htdocs\\DEVCONNECTOR\\client\\src\\actions\\types.js":"10","D:\\htdocs\\DEVCONNECTOR\\client\\src\\actions\\alert.js":"11","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\layout\\Alert.js":"12","D:\\htdocs\\DEVCONNECTOR\\client\\src\\actions\\auth.js":"13","D:\\htdocs\\DEVCONNECTOR\\client\\src\\reducers\\auth.js":"14","D:\\htdocs\\DEVCONNECTOR\\client\\src\\utils\\setAuthToken.js":"15","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\dashboard\\Dashboard.js":"16","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\routing\\PrivateRoute.js":"17","D:\\htdocs\\DEVCONNECTOR\\client\\src\\reducers\\profile.js":"18","D:\\htdocs\\DEVCONNECTOR\\client\\src\\actions\\profile.js":"19","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\layout\\Spinner.js":"20","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\dashboard\\DashboardActions.js":"22","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile-forms\\EditProfile.js":"23","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile-forms\\AddExperience.js":"24","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile-forms\\AddEducation.js":"25","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\dashboard\\Experience.js":"26","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\dashboard\\Education.js":"27","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profiles\\Profiles.js":"28","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profiles\\ProfileItem.js":"29","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\Profile.js":"30","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\ProfileTop.js":"31","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\ProfileAbout.js":"32","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\ProfileExperience.js":"33","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\ProfileEducation.js":"34","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\ProfileGithub.js":"35","D:\\htdocs\\DEVCONNECTOR\\client\\src\\reducers\\post.js":"36","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\posts\\Posts.js":"37","D:\\htdocs\\DEVCONNECTOR\\client\\src\\actions\\post.js":"38","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\posts\\PostItem.js":"39","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\posts\\PostForm.js":"40","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\post\\Post.js":"41","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\post\\CommentForm.js":"42","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\post\\CommentItem.js":"43","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\layout\\NotFound.js":"44","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\routing\\Routes.js":"45"},{"size":410,"mtime":1610713090720,"results":"46","hashOfConfig":"47"},{"size":1247,"mtime":1610890568318,"results":"48","hashOfConfig":"47"},{"size":1618,"mtime":1610877582421,"results":"49","hashOfConfig":"47"},{"size":1153,"mtime":1610793875083,"results":"50","hashOfConfig":"47"},{"size":3627,"mtime":1610733183956,"results":"51","hashOfConfig":"47"},{"size":2076,"mtime":1610733128383,"results":"52","hashOfConfig":"47"},{"size":604,"mtime":1610721649513,"results":"53","hashOfConfig":"47"},{"size":274,"mtime":1610876883285,"results":"54","hashOfConfig":"47"},{"size":926,"mtime":1610722704652,"results":"55","hashOfConfig":"47"},{"size":1077,"mtime":1610887955282,"results":"56","hashOfConfig":"47"},{"size":415,"mtime":1610728311606,"results":"57","hashOfConfig":"47"},{"size":619,"mtime":1610728036265,"results":"58","hashOfConfig":"47"},{"size":2094,"mtime":1610794524643,"results":"59","hashOfConfig":"47"},{"size":1233,"mtime":1610816265364,"results":"60","hashOfConfig":"47"},{"size":253,"mtime":1610730659323,"results":"61","hashOfConfig":"47"},{"size":1994,"mtime":1610821033628,"results":"62","hashOfConfig":"47"},{"size":662,"mtime":1610737106965,"results":"63","hashOfConfig":"47"},{"size":1373,"mtime":1610829207427,"results":"64","hashOfConfig":"47"},{"size":5810,"mtime":1610824997625,"results":"65","hashOfConfig":"47"},{"size":298,"mtime":1610794005776,"results":"66","hashOfConfig":"47"},{"size":7074,"mtime":1610810300415,"results":"67","hashOfConfig":"47"},{"size":663,"mtime":1610809056834,"results":"68","hashOfConfig":"47"},{"size":8297,"mtime":1610810286723,"results":"69","hashOfConfig":"47"},{"size":3547,"mtime":1610821310239,"results":"70","hashOfConfig":"47"},{"size":3579,"mtime":1610821264494,"results":"71","hashOfConfig":"47"},{"size":1451,"mtime":1610816391338,"results":"72","hashOfConfig":"47"},{"size":1437,"mtime":1610816697295,"results":"73","hashOfConfig":"47"},{"size":1341,"mtime":1610821015231,"results":"74","hashOfConfig":"47"},{"size":1032,"mtime":1610820931805,"results":"75","hashOfConfig":"47"},{"size":3009,"mtime":1610830218647,"results":"76","hashOfConfig":"47"},{"size":1889,"mtime":1610827572948,"results":"77","hashOfConfig":"47"},{"size":850,"mtime":1610830184856,"results":"78","hashOfConfig":"47"},{"size":700,"mtime":1610826330804,"results":"79","hashOfConfig":"47"},{"size":772,"mtime":1610826973602,"results":"80","hashOfConfig":"47"},{"size":1758,"mtime":1610829083488,"results":"81","hashOfConfig":"47"},{"size":1989,"mtime":1610908754942,"results":"82","hashOfConfig":"47"},{"size":1074,"mtime":1610885596578,"results":"83","hashOfConfig":"47"},{"size":3742,"mtime":1610888840945,"results":"84","hashOfConfig":"47"},{"size":2549,"mtime":1610887421803,"results":"85","hashOfConfig":"47"},{"size":1077,"mtime":1610885664667,"results":"86","hashOfConfig":"47"},{"size":1254,"mtime":1610888921457,"results":"87","hashOfConfig":"47"},{"size":1100,"mtime":1610888638901,"results":"88","hashOfConfig":"47"},{"size":1425,"mtime":1610889481520,"results":"89","hashOfConfig":"47"},{"size":347,"mtime":1610890266374,"results":"90","hashOfConfig":"47"},{"size":1725,"mtime":1610890609429,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"4z7s71",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"D:\\htdocs\\DEVCONNECTOR\\client\\src\\index.js",[],["190","191"],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\App.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\layout\\Navbar.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\layout\\Landing.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\auth\\Register.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\auth\\Login.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\store.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\reducers\\index.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\reducers\\alert.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\actions\\types.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\actions\\alert.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\layout\\Alert.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\actions\\auth.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\reducers\\auth.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\utils\\setAuthToken.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\dashboard\\Dashboard.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\reducers\\profile.js",["192"],"import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null, // This will take single profile information\r\n  profiles: [], // This will take the list of profiles\r\n  repos: [], // This will take github repos\r\n  loading: true, // Bir istek yaptığımızda bunu false yapacağız\r\n  error: {}, // Catch any error\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false, // Request is done\r\n      };\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false, // Request is done\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false, // Request is done\r\n        profile: null, // Add this\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false, // Request is done\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false, // Request is done\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\htdocs\\DEVCONNECTOR\\client\\src\\actions\\profile.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\layout\\Spinner.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile-forms\\CreateProfile.js",["193"],"import React, { useState, Fragment, createRef } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false); // ÇOK İYİ ÖZELLİK!!\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile-forms\\EditProfile.js",["194"],"import React, { useState, Fragment, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const initialState = {\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  };\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false); // ÇOK İYİ ÖZELLİK!!\r\n\r\n  useEffect(() => {\r\n    if (!profile) getCurrentProfile();\r\n    if (!loading && profile) {\r\n      const profileData = { ...initialState };\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      for (const key in profile.social) {\r\n        if (key in profileData) profileData[key] = profile.social[key];\r\n      }\r\n      if (Array.isArray(profileData.skills))\r\n        profileData.skills = profileData.skills.join(', ');\r\n      setFormData(profileData);\r\n    }\r\n  }, [loading, getCurrentProfile, profile]); // [loading, getCurrentProfile, profile] => When one of them happen, runs\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired, // It is a function\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired, // It is an object\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile-forms\\AddExperience.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile-forms\\AddEducation.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\dashboard\\Education.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profiles\\Profiles.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profiles\\ProfileItem.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\Profile.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\ProfileTop.js",["195"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className='profile-top bg-primary p-2'>\r\n      <img className='round-img my-1' src={avatar} alt='' />\r\n      <h1 className='large'>{name}</h1>\r\n      <p className='lead'>\r\n        {status} {company && <span>{company}</span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className='icons my-1'>\r\n        {website && (\r\n          <a href='#' target='_blank' rel='noopener noreferrer'>\r\n            <i className='fas fa-globe fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-twitter fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-facebook fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-linkedin fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-youtube fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-instagram fa-2x'></i>\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\ProfileAbout.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\ProfileExperience.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\ProfileEducation.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\profile\\ProfileGithub.js",["196"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map((repo) => (\r\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n              <p>{repo.description}</p>\r\n            </div>\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className='badge badge-dark'>\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","D:\\htdocs\\DEVCONNECTOR\\client\\src\\reducers\\post.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\posts\\Posts.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\actions\\post.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\posts\\PostItem.js",["197"],"import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux'; // Actions kullancağımız zaman bunu çağırıyoruz\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\nimport Post from '../post/Post';\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showAction,\r\n}) => {\r\n  return (\r\n    <div class='post bg-white p-1 my-1'>\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img class='round-img' src={avatar} alt='' />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p class='my-1'>{text}</p>\r\n        <p class='post-date'>\r\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n        </p>\r\n        {showAction && (\r\n          <Fragment>\r\n            <button\r\n              onClick={(e) => addLike(_id)}\r\n              type='button'\r\n              class='btn btn-light'\r\n            >\r\n              <i class='fas fa-thumbs-up'></i>\r\n              <span> {likes.length > 0 && <span>{likes.length}</span>}</span>\r\n            </button>\r\n            <button\r\n              onClick={(e) => removeLike(_id)}\r\n              type='button'\r\n              class='btn btn-light'\r\n            >\r\n              <i class='fas fa-thumbs-down'></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} class='btn btn-primary'>\r\n              Discussion{' '}\r\n              {comments.length > 0 && (\r\n                <span class='comment-count'>{comments.length}dsadasd</span>\r\n              )}\r\n            </Link>\r\n            {!auth.loading && user === auth.user._id && (\r\n              <button\r\n                onClick={(e) => deletePost(_id)}\r\n                type='button'\r\n                class='btn btn-danger'\r\n              >\r\n                <i class='fas fa-times'></i>\r\n              </button>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n  showAction: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\posts\\PostForm.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\post\\Post.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\post\\CommentForm.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\post\\CommentItem.js",["198"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => {\r\n  return (\r\n    <div class='post bg-white p-1 my-1'>\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img class='round-img' src={avatar} alt='' />\r\n          <h4>{avatar}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p class='my-1'>{text}</p>\r\n        <p class='post-date'>\r\n          Posted on <Moment format='YYYY-MM-DD'>{date}</Moment>\r\n        </p>\r\n        {!auth.loading && user === auth.user._id && (\r\n          <button\r\n            onClick={(e) => deleteComment(postId, _id)}\r\n            type='button'\r\n            className='btn btn-danger'\r\n          >\r\n            <i className='fas fa-times'></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.number.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\layout\\NotFound.js",[],"D:\\htdocs\\DEVCONNECTOR\\client\\src\\components\\routing\\Routes.js",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":18,"column":1,"nodeType":"205","endLine":58,"endColumn":2},{"ruleId":"206","severity":1,"message":"207","line":1,"column":37,"nodeType":"208","messageId":"209","endLine":1,"endColumn":46},{"ruleId":"210","severity":1,"message":"211","line":59,"column":6,"nodeType":"212","endLine":59,"endColumn":43,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":24,"column":11,"nodeType":"216","endLine":24,"endColumn":65},{"ruleId":"210","severity":1,"message":"217","line":10,"column":6,"nodeType":"212","endLine":10,"endColumn":22,"suggestions":"218"},{"ruleId":"206","severity":1,"message":"219","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":12},{"ruleId":"206","severity":1,"message":"220","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":25},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'createRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialState'. Either include it or remove the dependency array.","ArrayExpression",["223"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["224"],"'Post' is defined but never used.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [loading, getCurrentProfile, profile, initialState]",{"range":"229","text":"230"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"231","text":"232"},[1545,1582],"[loading, getCurrentProfile, profile, initialState]",[344,360],"[getGithubRepos, username]"]